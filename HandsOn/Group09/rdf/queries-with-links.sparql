@prefix sch: <http://schema.org/> .
@prefix ns: <http://example.org/ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .


# Query 1: Total number of museums
SELECT (COUNT(?museum) AS ?totalMuseums)
WHERE {
    ?museum rdf:type sch:Museum .
}


# Query 2: All museums with name, address (full), and postal code
SELECT ?museum ?name ?fullAddress ?postalCode
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name ;
            sch:address ?addr .
    ?addr sch:streetAddress ?fullAddress ;
          sch:postalCode ?postalCode .
}
ORDER BY ?name

# Query 3: Museums without email
SELECT ?museum ?name
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name .
    FILTER NOT EXISTS { ?museum sch:email ?email }
}
ORDER BY ?name


# Query 4: Verify ALL museums have location (city) via hasLocation
SELECT ?museum ?name
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name .
    FILTER NOT EXISTS { ?museum ns:hasLocation ?location }
}


# Query 5: Count museums per district (with district name and code)
SELECT ?districtCode ?districtName (COUNT(?museum) AS ?count)
WHERE {
    ?museum rdf:type sch:Museum ;
            ns:hasNeighbourhood ?neigh .
    ?neigh ns:hasDistrict ?district .
    ?district sch:name ?districtName ;
              sch:identifier ?districtCode .
}
GROUP BY ?districtCode ?districtName
ORDER BY DESC(?count)

# Query 6: List museums with full administrative hierarchy
SELECT ?museum ?name ?neighName ?districtName ?cityName ?provinceName
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name ;
            ns:hasNeighbourhood ?neigh .
    ?neigh sch:name ?neighName ;
           ns:hasDistrict ?district .
    ?district sch:name ?districtName ;
              ns:hasLocation ?city .
    ?city sch:name ?cityName ;
          ns:hasProvince ?province .
    ?province sch:name ?provinceName .
}
ORDER BY ?districtName ?neighName


# Query 7: Museums with Wikidata + address + neighbourhood
SELECT ?museum ?name ?wikidata ?address ?neighName
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name ;
            owl:sameAs ?wikidata ;
            sch:address/sch:streetAddress ?address ;
            ns:hasNeighbourhood/sch:name ?neighName .
    FILTER(STRSTARTS(STR(?wikidata), "https://www.wikidata.org/wiki/"))
}
ORDER BY ?name



# Query 8: All addresses with their reverse containment 

SELECT ?address ?street ?postalCode ?neigh ?district ?city ?province
WHERE {
    ?address a sch:PostalAddress ;
             sch:streetAddress ?street ;
             sch:postalCode ?postalCode ;
             ns:inNeighbourhood ?neigh ;
             ns:inDistrict ?district ;
             ns:inLocation ?city ;
             ns:inProvince ?province .
}
ORDER BY ?postalCode ?street



# Query 9: Find museums in the same neighbourhood (group by neighbourhood)
SELECT ?neighName (GROUP_CONCAT(?name; separator=" | ") AS ?museumsInNeighbourhood) (COUNT(?museum) AS ?count)
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name ;
            ns:hasNeighbourhood/sch:name ?neighName .
}
GROUP BY ?neighName
HAVING (COUNT(?museum) > 1)
ORDER BY DESC(?count)

#Query 10: Validate coordinates

SELECT ?museum ?name ?lat ?lon
WHERE {
    ?museum rdf:type sch:Museum ;
            sch:name ?name ;
            sch:latitude ?lat ;
            sch:longitude ?lon .
}
